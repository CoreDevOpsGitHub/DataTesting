{"name": "test_pilot_gasstation_pricing", "status": "broken", "statusDetails": {"message": "_tkinter.TclError: invalid command name \".!entry\"", "trace": "request = <FixtureRequest for <Function test_pilot_gasstation_pricing>>, _pytest_bdd_example = {}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n..\\..\\..\\..\\scoop\\apps\\python\\current\\lib\\site-packages\\pytest_bdd\\scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\..\\..\\scoop\\apps\\python\\current\\lib\\site-packages\\pytest_bdd\\scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n..\\..\\..\\..\\scoop\\apps\\python\\current\\lib\\site-packages\\pytest_bdd\\scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n..\\..\\..\\..\\scoop\\apps\\python\\current\\lib\\site-packages\\_pytest\\fixtures.py:890: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nTest_Steps\\test_01_pilot_gas_pricing.py:32: in receive_result_set\n    exec = show_entry_fields()\n..\\USER_INTERFFACE.py:5: in show_entry_fields\n    expected_value_string = expected_value.get()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tkinter.Entry object .!entry>\n\n    def get(self):\n        \"\"\"Return the text.\"\"\"\n>       return self.tk.call(self._w, 'get')\nE       _tkinter.TclError: invalid command name \".!entry\"\n\n..\\..\\..\\..\\scoop\\apps\\python\\current\\lib\\tkinter\\__init__.py:3072: TclError"}, "description": "../Features/01_Pilot_Gas_Pricing.feature: Scenario to Validate the Data Test", "start": 1673293061306, "stop": 1673293061366, "uuid": "c6f163b6-dfbc-4def-8418-e5e7112dfacc", "historyId": "615a245f477f00244484ededdb55d5b4", "testCaseId": "e5627f093e51e6298f2289cae80a02ec", "fullName": "Test_Steps.test_01_pilot_gas_pricing#test_pilot_gasstation_pricing", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('fixed_driver')"}, {"name": "parentSuite", "value": "Test_Steps"}, {"name": "suite", "value": "test_01_pilot_gas_pricing"}, {"name": "host", "value": "EC2AMAZ-O7K498H"}, {"name": "thread", "value": "11672-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Steps.test_01_pilot_gas_pricing"}]}